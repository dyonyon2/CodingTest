# 문제
# Given a sequence of integers, a1, a2, …, an, we define its sign matrix S such that, 
# for 1 ≤ i ≤ j ≤ n, Sij="+" if ai + … + aj > 0; Sij="−" if ai + … + aj < 0; and Sij="0" otherwise. 

# For example, if (a1, a2, a3, a4)=( −1, 5, −4, 2), then its sign matrix S is a 4×4 matrix: 

#  	1	2	3	4
# 1	-	+	0	+
# 2	 	+	+	+
# 3	 	 	-	-
# 4	 	 	 	+
# We say that the sequence (−1, 5, −4, 2) generates the sign matrix. 
# A sign matrix is valid if it can be generated by a sequence of integers. 

# Given a sequence of integers, it is easy to compute its sign matrix. 
# This problem is about the opposite direction: Given a valid sign matrix, 
# find a sequence of integers that generates the sign matrix. 
# Note that two or more different sequences of integers can generate the same sign matrix.
# For example, the sequence (−2, 5, −3, 1) generates the same sign matrix as the sequence (−1,5, −4,2). 

# Write a program that, given a valid sign matrix, can find a sequence of integers that generates the sign matrix. 
# You may assume that every integer in a sequence is between −10 and 10, both inclusive. 

# 입력
# The first line contains an integer n(1 ≤ n ≤ 10), where n is the length of a sequence of integers. 
# The second line contains a string of n(n+1)/2 characters such that the first n characters correspond to the first row of the sign matrix, 
# the next n−1 characters  to the second row, ..., and the last character to the n-th row. 

# 출력
# Output exactly one line containing a sequence of n integers which generates the sign matrix. 
# If more than one sequence generates the sign matrix, you may output any one of them. 
# Every integer in the sequence must be between −10 and 10, both inclusive.

# 예제 입력 1 
# 4
# -+0++++--+
# 예제 출력 1 
# -2 5 -3 1
# 예제 입력 2 
# 2
# +++
# 예제 출력 2 
# 3 4
# 예제 입력 3 
# 5
# ++0+-+-+--+-+--
# 예제 출력 3 
# 1 2 -3 4 -5

import sys
input = sys.stdin.readline

count = int(input())
array = [[9 for j in range(count)] for i in range(count)]
tmp = list(map(str, input()))
result = []
k = 0
for i in range(count):
    for j in range(i,count):
        array[i][j] = tmp[k]
        k+=1
# print(array)

def dfs(index):
    if len(result) == count:
        print(' '.join(map(str,result)))
        # print(result)
        # return
        exit(0)
    for i in range(-10,11):
        if array[index][index] == "0":
            if not(i == 0):
                continue
        elif array[index][index] == "-":
            if not(i < 0):
                continue
        elif array[index][index] == "+":
            if not(i > 0):
                continue
        
        result.append(i)
        flag = True
        if array[index][index] != "0":
            for j in range(index):
                tmp = 0
                for k in range(j,index+1):
                    tmp = tmp + result[k]
                    if tmp < 0:
                        if array[j][k]!="-":
                            flag = False
                    elif tmp == 0:
                        if array[j][k]!="0":
                            flag = False
                    elif tmp > 0:
                        if array[j][k]!="+":
                            flag = False
        if flag:       
            dfs(index+1)
            result.pop() 
        else:
            result.pop() 

dfs(0)
